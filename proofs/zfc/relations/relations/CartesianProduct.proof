import zfc {
	axioms
	relations.relations.OrderedPair
}

transparent predicate @ from ElementOfSymbol
transparent predicate # from SubsetSymbol

opaque function CP(a, b) : Separate[:(k): Left(k) @ a AND Right(k) @ b AND k = OP(Left(k), Right(k))](Power(Power(SimpleUnion(a, b))))


theorem left_in_cp : [a][b][o](o @ CP(a, b) -> Left(o) @ a) {
	element a, b, o from goal
	o @ CP(a, b) | assumption
	Left(o) @ a | axiom_of_separation
}

theorem right_in_cp : [a][b][o](o @ CP(a, b) -> Right(o) @ b) {
	element a, b, o from goal
	o @ CP(a, b) | assumption
	Right(o) @ b | axiom_of_separation
}

theorem op_left_right : [a][b][o](o @ CP(a, b) -> o = OP(Left(o), Right(o))) {
	element a, b, o from goal
	o @ CP(a, b) | assumption
	o = OP(Left(o), Right(o)) | axiom_of_separation
}

theorem op_in_cp : [a][b][x][y](x @ a AND y @ b <-> OP(x, y) @ CP(a, b)){
	element a, b, x, y from goal

	lemma : x @ a AND y @ b -> OP(x, y) @ CP(a, b) {
		x @ a AND y @ b | assumption

		lemma : Left(OP(x, y)) @ a AND Right(OP(x, y)) @ b AND OP(x, y) = OP(Left(OP(x, y)), Right(OP(x, y))) {
			Left(OP(x, y)) @ a | left_op
			Right(OP(x, y)) @ b | right_op

			OP(x, y) = OP(Left(OP(x, y)), y) | left_op
			         = OP(Left(OP(x, y)), Right(OP(x, y))) | right_op
		}

		lemma : OP(x, y) # Power(SimpleUnion(a, b)) {
			element c from goal
			c @ OP(x, y) | assumption

			lemma : c # SimpleUnion(a, b) {
				element d from goal
				d @ c | assumption
				  @ Union(OP(x, y)) | axiom_of_union
				  @ Pair(x, y) | union_op
				d = x OR d = y | axiom_of_pairing

				lemma : d = x -> d @ SimpleUnion(a, b) {
					d @ a | assumption
					  @ SimpleUnion(a, b) | in_simple_union
				}

				lemma : d = y -> d @ SimpleUnion(a, b) {
					d @ b | assumption
					  @ SimpleUnion(a, b) | in_simple_union
				}

				| cases : [d = x, d = y, d @ SimpleUnion(a, b)]
			}

			| axiom_of_power
		}

		OP(x, y) @ Power(Power(SimpleUnion(a, b))) | axiom_of_power
		         @ CP(a, b) | axiom_of_separation
	}

	lemma : OP(x, y) @ CP(a, b) -> x @ a AND y @ b {
		OP(x, y) @ CP(a, b) | assumption

		Left(OP(x, y)) @ a | left_in_cp
		x @ a | left_op

		Right(OP(x, y)) @ b | right_in_cp
		y @ b | right_op
	}
}

theorem cp_subset_cp : [a][b][c][d](a # c AND b # d -> CP(a, b) # CP(c, d)) {
	element a, b, c, d from goal
	a # c AND b # d | assumption

	element o from goal
	o @ CP(a, b) | assumption

	Left(o) @ a | left_in_cp
	        @ c | in_superset

	Right(o) @ b | right_in_cp
	         @ d | in_superset

	OP(Left(o), Right(o)) @ CP(c, d) | op_in_cp
	                    o @ CP(c, d) | op_left_right
}