import zfc {
	axioms
	relations.relations {
		OrderedPair
		CartesianProduct
	}
}

transparent predicate @ from ElementOfSymbol
transparent predicate # from SubsetSymbol

opaque predicate IsRelation(r, a, b): r # CP(a, b)

opaque predicate Related(r, x, y): OP(x, y) @ r

opaque function Domain(r): Separate[:(k): {o @ r}(k = Left(o))](Union(Union(r)))

opaque function Range(r): Separate[:(k): {o @ r}(k = Right(o))](Union(Union(r)))

opaque function Relationator[P(2)](a, b): Separate[:(k): P(Left(k), Right(k))](CP(a, b))

transparent predicate R from Related

theorem left_in_domain : [r][a][b](IsRelation(r, a, b) -> [x](x @ Domain(r) <-> {y} R(r, x, y))) {
	element r, a, b from goal
	IsRelation(r, a, b) | assumption
	element x from goal

	lemma : x @ Domain(r) -> {y} R(r, x, y) {
		x @ Domain(r) | assumption
		element o from {o @ r}(x = Left(o)) | axiom_of_separation

		o @ CP(a, b) | truths
		R(r, Left(o), Right(o)) | op_left_right
		R(r, x      , Right(o)) | substitution
	}

	lemma : {y} R(r, x, y) -> x @ Domain(r) {
		element y from {y} R(r, x, y) | assumption
		
		x = Left(OP(x, y)) | left_op

		lemma : x @ Union(Union(r)) {
			x @ Pair(x, y) | axiom_of_pairing
			  @ Union(OP(x, y)) | union_op
			  @ Union(Union(r)) | double_union
		}

		x @ Domain(r) | axiom_of_separation
	}
}

theorem right_in_range : [r][a][b](IsRelation(r, a, b) -> [y](y @ Range(r) <-> {x} R(r, x, y))) {
	element r, a, b from goal
	IsRelation(r, a, b) | assumption
	element y from goal

	lemma : y @ Range(r) -> {x} R(r, x, y) {
		y @ Range(r) | assumption

		element o from {o @ r}(y = Right(o)) | axiom_of_separation

		o @ CP(a, b) | truths
		R(r, Left(o), Right(o)) | op_left_right
		R(r, Left(o), y       ) | substitution
	}

	lemma : {x} R(r, x, y) -> y @ Range(r) {
		element x from {x} R(r, x, y) | assumption
		
		y = Right(OP(x, y)) | right_op

		lemma : y @ Union(Union(r)) {
			y @ Pair(x, y) | axiom_of_pairing
			  @ Union(OP(x, y)) | union_op
			  @ Union(Union(r)) | double_union
		}

		y @ Range(r) | axiom_of_separation
	}
}

theorem left_in_bound : [r][a][b](IsRelation(r, a, b) -> [x]({y} R(r, x, y) -> x @ a)) {
	element r, a, b from goal
	IsRelation(r, a, b) | assumption

	element x from goal
	element y from {y} R(r, x, y) | assumption

	OP(x, y) @ CP(a, b) | truths
	x @ a | op_in_cp
}

theorem right_in_bound : [r][a][b](IsRelation(r, a, b) -> [y]({x} R(r, x, y) -> y @ b)) {
	element r, a, b from goal
	IsRelation(r, a, b) | assumption

	element y from goal
	element x from {x} R(r, x, y) | assumption

	OP(x, y) @ CP(a, b) | truths
	y @ b | op_in_cp
}

theorem domain_subset : [r][a][b](IsRelation(r, a, b) -> Domain(r) # a) {
	element r, a, b from goal
	IsRelation(r, a, b) | assumption

	element x from goal
	x @ Domain(r) | assumption
	{y} R(r, x, y) | left_in_domain
	x @ a | left_in_bound
}

theorem range_subset : [r][a][b](IsRelation(r, a, b) -> Range(r) # b) {
	element r, a, b from goal
	IsRelation(r, a, b) | assumption

	element y from goal
	y @ Range(r) | assumption
	{x} R(r, x, y) | right_in_range
	y @ b | right_in_bound
}

theorem relation_subset : [r][s][a][b](IsRelation(r, a, b) AND IsRelation(s, a, b) -> (r # s <-> [x @ a][y @ b](R(r, x, y) -> R(s, x, y)))) {
	element r, s, a, b from goal
	IsRelation(r, a, b) AND IsRelation(s, a, b) | assumption

	lemma : r # s -> [x @ a][y @ b](R(r, x, y) -> R(s, x, y)) {
		r # s | assumption
		element x from goal x @ a | assumption
		element y from goal y @ b | assumption

		R(r, x, y) | assumption
		R(s, x, y) | in_superset
	}

	lemma : [x @ a][y @ b](R(r, x, y) -> R(s, x, y)) -> r # s {
		lemma ass : [x @ a][y @ b](R(r, x, y) -> R(s, x, y)) {| assumption}

		element o from goal
		o @ r | assumption
		  @ CP(a, b) | in_superset

		Left(o) @ a | left_in_cp
		Right(o) @ b | right_in_cp

		R(r, Left(o), Right(o)) | op_left_right
		R(s, Left(o), Right(o)) | ass
		o @ s | op_left_right
	}
}

theorem relationator_is_relation [P(2)] : [a][b](IsRelation(Relationator[P](a, b), a, b)) {
	element a, b from goal
	| separation_is_subset
}

theorem relationator_related [P(2)] : [a][b][x][y](R(Relationator[P](a, b), x, y) <-> x @ a AND y @ b AND P(x, y)) {
	element a, b, x, y from goal

	IsRelation(Relationator[P](a, b), a, b) | relationator_is_relation

	lemma : R(Relationator[P](a, b), x, y) -> x @ a AND y @ b AND P(x, y) {
		R(Relationator[P](a, b), x, y) | assumption

		x @ a | left_in_bound
		y @ b | right_in_bound

		P(Left(OP(x, y)), Right(OP(x, y))) | axiom_of_separation
		P(        x     , Right(OP(x, y))) | left_op
		P(        x     ,             y  ) | right_op
	}

	lemma : x @ a AND y @ b AND P(x, y) -> R(Relationator[P](a, b), x, y) {
		x @ a AND y @ b AND P(        x     ,             y  ) | assumption
		                    P(        x     , Right(OP(x, y))) | right_op
		                    P(Left(OP(x, y)), Right(OP(x, y))) | left_op

		OP(x, y) @ CP(a, b) | op_in_cp

		R(Relationator[P](a, b), x, y) | axiom_of_separation
	}
}