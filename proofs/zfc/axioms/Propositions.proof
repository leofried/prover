theorem reflexivity [P] : P -> P {
	P | assumption
}

theorem insertion [P, Q] : P -> Q -> P {
	P | assumption
}

theorem separation [P, Q, R] : (P -> Q -> R) -> (P -> Q) -> (P -> R) {
	P -> Q -> R | assumption
	P -> Q | assumption
	P | assumption
	Q | truths
	R | truths
}

theorem transitivity [P, Q, R] : (P -> Q) AND (Q -> R) -> P -> R {
	(P -> Q) AND (Q -> R) | assumption
	P | assumption
	Q | truths
	R | truths
}

theorem explosion [P] : False -> P {
	True | truths
}

theorem implosion [P] : (P OR P) -> P {
	NOT P | assumption
}

theorem cases [P, Q, R] : (P OR Q) AND (P -> R) AND (Q -> R) -> R {
	(P OR Q) AND (P -> R) AND (Q -> R) | assumption

	lemma : NOT R -> R {
		NOT R | assumption
		NOT P | truths
		Q | truths
		R | truths
	}

	| implosion
}

theorem simple_cases [P, Q] : (P -> Q) AND (NOT P -> Q) -> Q {
	P OR NOT P | reflexivity : [P]
	(P -> Q) AND (NOT P -> Q) | assumption
	| cases : [P, NOT P, Q]
}

theorem complex_cases [P, Q, R] : (P OR Q OR R) AND (Q -> P) AND (R -> P) -> P {
	(P OR Q OR R) AND (Q -> P) AND (R -> P) | assumption

	lemma : NOT P -> P {
		NOT P | assumption
		NOT R | truths
		NOT Q | truths
		P | truths
	}

	| implosion
}

theorem expand_or [P, Q] : P -> P OR Q {
	P | assumption
}