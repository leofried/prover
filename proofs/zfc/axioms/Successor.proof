import zfc.axioms {
	EmptySet
	Extensionality
	Foundation
	Pairing
	Propositions
	Separation
	Simple
	Subset
}

transparent predicate @ from ElementOfSymbol
transparent predicate # from SubsetSymbol
transparent function 0 from EmptySet

opaque function Successor(x): SimpleUnion(x, Singleton(x))

transparent function S from Successor

theorem succ_not_zero : [a][b = S(a)](S(a) != 0 AND b != 0) {
	element a, b from goal
	S(a) = b | assumption

	a @ Singleton(a) | in_singleton
	  @ S(a) | in_simple_union

	0 != S(a) | empty_set
	  != b | substitution
}

theorem succ_inj : [a][b](S(a) = S(b) -> a = b) {
	element a, b from goal

	S(a) = S(b) | assumption
	
	a @ Singleton(a) | in_singleton
	  @ S(a) | in_simple_union
	  @ S(b) | substitution

	a @ b OR a @ Singleton(b) | in_simple_union

	lemma : a @ b -> a = b {
		a @ b | assumption

		b @ Singleton(b) | in_singleton
		  @ S(b) | in_simple_union
		  @ S(a) | substitution

		b @ a OR b @ Singleton(a) | in_simple_union

		lemma : b @ a -> a = b {
			b @ a | assumption
			False | element_of_asymmetric
			a = b | explosion
		}

		b @ Singleton(a) -> a = b | in_singleton

		a = b | cases : [b @ a, b @ Singleton(a), a = b]
	}

	a @ Singleton(b) -> a = b | in_singleton

	| cases : [a @ b, a @ Singleton(b), a = b]
}